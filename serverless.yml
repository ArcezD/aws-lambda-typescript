service: serverless-lambda-typescript-example

provider:
  name: aws
  runtime: nodejs6.10
  stage: demo
  region: us-east-1
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "apigateway:GET"
      Resource:
        - "arn:aws:apigateway:${self:provider.region}::/restapis*"

plugins:
  - serverless-plugin-typescript
  - serverless-offline
  - serverless-aws-documentation

package:
  include:
    src/**/!(*.spec).js
  exclude:
    - node_modules/**/*

functions:
  getSwaggerJson:
    handler: src/swagger/swagger.getSwaggerJson
    description: Returns the Swagger documentation of the API in JSON format.

    environment:
      REGION_NAME: ${self:provider.region}
      REST_API_NAME: ${self:service}
      STAGE_NAME: ${self:provider.stage}

    events:
      - http:
          path: swagger.json
          method: get
          cors: true

  getCity:
    handler: src/cities/cities.getCity
    description: Returns a single city.

    environment:
      DEFAULT_COUNTRY: Hungary

    events:
      - http:
          path: cities/{id}
          method: get
          cors: true
          request:
            parameters:
              paths:
                id: true
          documentation:
            summary: Get a city.
            tags:
              - City
            description: Returns the specified city.
            pathParams:
              - name: id
                description: The unique identifier of the city to retrieve.
            methodResponses:
              - statusCode: '200'
                description: Returned when the operation is completed successfully.
                responseModels:
                  "application/json": GetCityResponse
              - ${file(./swagger/error-responses/bad-request.yml)}
              - ${file(./swagger/error-responses/forbidden.yml)}
              - ${file(./swagger/error-responses/not-found.yml)}
              - ${file(./swagger/error-responses/internal-server-error.yml)}

custom:
  documentation: ${file(./swagger/documentation.yml)}
    